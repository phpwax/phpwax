From 0cdc606e3631e68c747a608215121d6ae4427622 Mon Sep 17 00:00:00 2001
From: Ross Riley <rossriley@Macintosh.home>
Date: Sat, 12 Apr 2008 11:27:36 +0100
Subject: Clean up of Config class and rewrite of tests

---
 wax/AutoLoader.php                |    1 -
 wax/tests/TestConfig.php          |   33 +++++++++++++++++++++++++++++++++
 wax/tests/TestWXConfiguration.php |   28 ----------------------------
 wax/utilities/Config.php          |   34 ++++++++++++++++++----------------
 4 files changed, 51 insertions(+), 45 deletions(-)
 create mode 100755 wax/tests/TestConfig.php
 delete mode 100755 wax/tests/TestWXConfiguration.php

diff --git a/wax/AutoLoader.php b/wax/AutoLoader.php
index 104ea7a2d56015532440903fbdc6de791d2a6f80..51cb25d22ea450baff503e6c13a227e8a610e68e 100755
--- a/wax/AutoLoader.php
+++ b/wax/AutoLoader.php
@@ -171,7 +171,6 @@ class AutoLoader
 	  self::recursive_register(CONTROLLER_DIR, "application");
 		self::recursive_register(FRAMEWORK_DIR, "framework");
 		self::autoregister_plugins();
-		WXConfiguration::set_instance();
 		self::detect_environments();
 		self::include_from_registry('WXInflections');  // Bit of a hack -- forces the inflector functions to load
 		self::include_from_registry('WXHelpers');  // Bit of a hack -- forces the helper functions to load
diff --git a/wax/tests/TestConfig.php b/wax/tests/TestConfig.php
new file mode 100755
index 0000000000000000000000000000000000000000..3a73d020966eb51d1d290f15bba8ffb9dd056197
--- /dev/null
+++ b/wax/tests/TestConfig.php
@@ -0,0 +1,33 @@
+<?php
+
+class TestConfig extends WXTestCase 
+{
+    public function setUp() {
+      Config::set_environment('test');
+    }
+    
+    public function tearDown() {}
+
+  	public function test_set_array() {
+  	  Config::set(array("newtest"=>"5"));
+  	  $this->assertEqual(Config::get('newtest'), 5);
+  	}
+  	
+  	public function test_set() {
+  	  Config::set("myconf", "myval");
+  	  $this->assertEqual(Config::get('myconf'), "myval");
+  	}
+
+    public function test_get($value) { 
+  	  $config = Config::get('all');
+  	  $this->assertTrue(is_array($config));
+  	}
+
+  	public function test_set_environment($env) {
+  	  Config::set_environment('test');
+  	  $this->assertEqual(Config::get('test/db'), Config::get('db'));
+  	}
+
+    
+}
+?>
\ No newline at end of file
diff --git a/wax/tests/TestWXConfiguration.php b/wax/tests/TestWXConfiguration.php
deleted file mode 100755
index c02f5fb9e5126251d3d78757a6ffd47aab2172d9..0000000000000000000000000000000000000000
--- a/wax/tests/TestWXConfiguration.php
+++ /dev/null
@@ -1,28 +0,0 @@
-<?php
-
-class TestWXConfiguration extends WXTestCase 
-{
-    public function setUp() {
-      WXConfiguration::set_environment('test');
-    }
-    
-    public function tearDown() {}
-
-  	public function test_set() {
-  	  WXConfiguration::set(array("newtest"=>"5"));
-  	  $this->assertEqual(WXConfiguration::get('newtest'), 5);
-  	}
-
-    public function test_get($value) { 
-  	  $config = WXConfiguration::get('all');
-  	  $this->assertTrue(is_array($config));
-  	}
-
-  	public function test_set_environment($env) {
-  	  WXConfiguration::set_environment('test');
-  	  $this->assertEqual(WXConfiguration::get('test/db'), WXConfiguration::get('db'));
-  	}
-
-    
-}
-?>
\ No newline at end of file
diff --git a/wax/utilities/Config.php b/wax/utilities/Config.php
index ba7b8b09c805fbf0d7210cce3bb2ec296f3dda6b..48fd2885da18cea74b4f54ae6de8814618f0abb1 100644
--- a/wax/utilities/Config.php
+++ b/wax/utilities/Config.php
@@ -25,14 +25,14 @@ class Config
 	
 	public $config_array;
 	public $app_yaml_file=false;
-	static private $instance=false;
+	static $initialised = false;
 	
-	static public function set_instance($initial_config=false) {
-	  if(self::$instance) return false;
-	  self::$instance=new WXConfiguration();
+	static public function initialise($initial_config=false) {
+	  if(self::$initialised) return true;
 		if(!$initial_config) $initial_config = CONFIG_DIR."config.yml";
-	  self::$instance->app_yaml_file = $initial_config;
-	  self::$instance->config_array = self::$instance->load_yaml(self::$instance->app_yaml_file);
+	  self::$app_yaml_file = $initial_config;
+	  self::$config_array = self::$load_yaml(self::$app_yaml_file);
+	  self::$initialised=true;
 	}
 	
 	/**
@@ -58,9 +58,9 @@ class Config
     */
 	
 	public function return_config($config=null) {
-		if($config=="all") return self::$instance->config_array;
+		if($config=="all") return self::$config_array;
 		$config=explode("/", $config);
-		$confarray=self::$instance->config_array;
+		$confarray=self::$config_array;
 		foreach($config as $conf) {
 			if(array_key_exists($conf,$confarray)) $confarray=$confarray[$conf];
 			else $confarray=false;
@@ -72,7 +72,7 @@ class Config
 	}
 	
 	static public function replace_yaml($file) {
-	  self::$instance->config_array = self::$instance->load_yaml($file);
+	  self::$config_array = self::load_yaml($file);
 	}
 	
 	/**
@@ -80,12 +80,12 @@ class Config
     *  @return bool
     */
 	
-	static public function set($new_config = array()) {
-	  if(is_array($new_config)) {
-	    self::$instance->config_array = array_merge(self::$instance->config_array, $new_config);
-	    return true;
-	  } 
-	  return false;
+	static public function set($new_config, $new_value=false) {
+	  self::initialise();
+	  if(!is_array($new_config)) {
+	    $new_config = array($new_config=>$new_value);
+	  }
+	  self::$config_array = array_merge(self::$config_array, $new_config);
 	}
 	
 	/**
@@ -95,6 +95,7 @@ class Config
     */
 	
 	static public function set_environment($env) {
+	  self::initialise();
 	  $env = self::get($env);
 	  if(is_array($env)) {
 	    return self::set($env);
@@ -107,7 +108,8 @@ class Config
     */
 	
 	static public function get($value) { 
-	  return self::$instance->return_config($value);
+	  self::initialise();
+	  return self::return_config($value);
 	}
 		
 	
-- 
1.5.4


