From 0858763a97c49488dc76add2c1853ba4ccd46bc6 Mon Sep 17 00:00:00 2001
From: Ross Riley <rossriley@Macintosh.home>
Date: Thu, 10 Apr 2008 23:05:41 +0100
Subject: Request wrapper tests

---
 wax/tests/TestPaginatedRecordset.php |   43 ++++++++++++++++++++++++++++++++++
 wax/tests/TestRequest.php            |    8 +++---
 wax/utilities/Request.php            |   28 +++++++++++++++-------
 3 files changed, 66 insertions(+), 13 deletions(-)
 create mode 100644 wax/tests/TestPaginatedRecordset.php

diff --git a/wax/tests/TestPaginatedRecordset.php b/wax/tests/TestPaginatedRecordset.php
new file mode 100644
index 0000000000000000000000000000000000000000..c932012f67c5557c00b60345bd4ec15d84439150
--- /dev/null
+++ b/wax/tests/TestPaginatedRecordset.php
@@ -0,0 +1,43 @@
+<?php
+
+class PaginatedModel extends WaxModel {
+  public function setup() {
+    $this->define("name", "CharField", array("maxlength"=>40));
+  }
+}
+
+
+
+class TestPaginatedRecordset extends WXTestCase {
+    public function setUp() {
+      $this->model = new PaginatedModel;
+      $this->model->syncdb();
+      foreach($this->gen_fixtures("name", "user", 45) as $row) {
+        $this->model->create($row);
+      }
+    }
+    
+    public function tearDown() {
+      $this->model->clear()->delete();
+    }
+    
+    public function gen_fixtures($field, $value, $number) {
+      for($i=1; $i <=$number; $i++) {
+        $fixtures[]= array($field => $value.$number);
+      }
+      return $fixtures;
+    }
+    
+    public function test_simple_page() {
+      $this->assertEqual($this->model->all()->count(), 40);
+    }
+    
+    
+}
+
+
+
+
+
+
+
diff --git a/wax/tests/TestRequest.php b/wax/tests/TestRequest.php
index 579bd9b7f566cba375787748eeaf2d57693c3e32..874f49079447749e8cfce08940f2c6daab74ae64 100644
--- a/wax/tests/TestRequest.php
+++ b/wax/tests/TestRequest.php
@@ -16,16 +16,16 @@ class TestRequest extends WXTestCase {
       $_GET["test"]="hello";
       $_POST["test2"]="hello";
       $this->assertEqual(Request::get("test"), "hello");
-      $this->assertEqual(Request::get("test2"), "hello");
+      $this->assertEqual(Request::post("test2"), "hello");
     }
     
     public function test_filters() {
       $_GET["test"]="<script>hello</script>";
       $_GET["test2"]="<p>hello</p>";
       $_GET["test3"]="'hello'";
-      $this->assertEqual(Request::get("test"), "<script>hello</script>");
-      $this->assertEqual(Request::get("test2"), "<p>hello</p>");
-      $this->assertEqual(Request::get("test3"), "'hello'");
+      $this->assertEqual(Request::safe_get("test"), "hello");
+      $this->assertEqual(Request::safe_get("test2"), "hello");
+      $this->assertEqual(Request::safe_get("test3"), "'hello'");
     }
    
 }
diff --git a/wax/utilities/Request.php b/wax/utilities/Request.php
index fc4cfc99d026723224b01e200cd1b5b31433b34b..474d8be39d03c575946bcd29c18d495b8300ed0e 100644
--- a/wax/utilities/Request.php
+++ b/wax/utilities/Request.php
@@ -10,20 +10,30 @@
 class Request {
 		
 	static $params = false;
+	static $get = false;
+	static $post = false;
 	
-	public function filter($name, $raw) {
-	  if(!$raw) $val = filter_var(self::$params[$name], FILTER_SANITIZE_SPECIAL_CHARS);
-    else      $val = filter_var(self::$params[$name], FILTER_UNSAFE_RAW);
-	  return $val;
+	public function filter($val) {
+	  return filter_var($val, FILTER_SANITIZE_STRING);
 	}
 	
-	public function raw($name) {
-	  return self::filter($name, true);
-	}
 	
 	public function get($name) {
-	  if(!self::$params) self::$params = array_merge(WaxUrl::get_params(), $_POST);
-	  return self::filter($name, false);
+	  if(!self::$get) self::$get = WaxUrl::get_params();
+	  return self::$get[$name];
+	}
+	
+	public function post() {
+	  if(!self::$post) self::$post = $_POST;
+	  return self::$post[$name];
+	}
+	
+	public function safe_get() {
+	  return self::filter($get[$name]);
+	}
+	
+	public function safe_post() {
+	  return self::filter($post[$name]);
 	}
 
 
-- 
1.5.4


