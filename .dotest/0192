From 5b2e68569f54cd5ee1515d3c359c3bd117ada944 Mon Sep 17 00:00:00 2001
From: Ross Riley <rossriley@Macintosh.home>
Date: Wed, 9 Apr 2008 00:50:41 +0100
Subject: Cleaned up the config file
 Moved in support for basic capistrano deployment
 Moved Application to use new route mapping

---
 skel/app/config/config.yml |   52 ++++++++++++++++++++-----------------------
 skel/capfile               |   43 ++++++++++++++++++++++++++++++++++++
 wax/WXApplication.php      |   11 ++++++---
 wax/tests/TestWXRoute.php  |   38 --------------------------------
 4 files changed, 74 insertions(+), 70 deletions(-)
 create mode 100644 skel/capfile
 delete mode 100644 wax/tests/TestWXRoute.php

diff --git a/skel/app/config/config.yml b/skel/app/config/config.yml
index 1c979088a1913b352d7a6e4e8a20096fbb8deb6c..93935b4c40b506a413b7b2467b97a210e550e0a4 100755
--- a/skel/app/config/config.yml
+++ b/skel/app/config/config.yml
@@ -1,10 +1,17 @@
 ##### config.yml file use to configure applications ###
-# 1: environments: Setup ip sniffing to detect environments 
-environments:
-  development:  172.*
-  production:   86.54.101.70
+# Environments: Setup ip sniffing to detect environments
+# 
+#  Hopefully entirely unnecessary most of the time - 
+#  Local ranges 127., 10. and 192. default to development
 
-# Environment configuration.
+
+# environments:
+#   development:  172.*
+#   production:   86.54.101.70
+
+
+
+# == Database configuration ==
 development:
  db:
   dbtype: none  
@@ -30,37 +37,26 @@ production:
     password: secret
 
 
-# 2: route: passes config values to WXRoute
-# options:
-#  a) default:page -the value of default is the controller that unanswered requests are passed to
-route:
-  default: page
-  urls:        
-    "/^([\w-]*)\/([\w-]*)\/([\w-]*)/":   
-      controller:
-      action:
-      id:
 
-# 3: Automatic deploymet config for script/deploy
-# Requires destination server, login and path and subversion user, password and path.
+# == Automatic deployment config for script/deploy ==
+# Requires destination server, login and path and subversion path to checkout from.
+#
+# Note that this is only for basic deployment, we'd advise using capistrano where available
+# There should be an example capfile in the root of your application.
+
 deploy:
   server:       example.com
   server_path:  /
   user:         appuser
-  svn_user:
-  svn_pass:
   svn_path:   
-  before_deploy:
-    # add any unix commands to be run on the remote server before deploy - 1 per line
-  after_deploy:
-    # add any unix commands to be run on the remote server after deploy - 1 per line
 
-# 4: Maintenance downtime: Use to make the site unavailable to all but one ip
-# Just comment the lines out to operate the site normally. Note that this will need to be your public ip address.
-# Redirect gives an address to redirect all requests to.
+
+#  == Maintenance downtime == 
+#  Use to make the site unavailable to all but one ip
+#  Just comment the lines out to operate the site normally. Note that this will need to be your public ip address.
+#  Redirect gives an address to redirect all requests to.
+#
 #maintenance: 
 #  ip:       123.456.7.8
 #  redirect: holding
 
-# 5: Asset Serving: Serve any public asset from a separate server : just the domain - no slashes
-#assets: static.yoursite.com/
diff --git a/skel/capfile b/skel/capfile
new file mode 100644
index 0000000000000000000000000000000000000000..c66793a7a95ffeadce8fab92ad754f1924f1055c
--- /dev/null
+++ b/skel/capfile
@@ -0,0 +1,43 @@
+# This defines a deployment "recipe" that you can feed to capistrano
+# (http://manuals.rubyonrails.com/read/book/17). It allows you to automate
+# (among other things) the deployment of your application.
+
+# =============================================================================
+# REQUIRED VARIABLES
+# =============================================================================
+# You must always specify the application and repository for every recipe. The
+# repository must be the URL of the repository you want this recipe to
+# correspond to. The deploy_to path must be the path on each machine that will
+# form the root of the application path.
+
+set :application, "appname"
+set :repository, "svn://yourrepo.com/home/svn/#{application}"
+
+
+role :web, "appname"
+set :user, "user"
+
+# =============================================================================
+# OPTIONAL VARIABLES
+# =============================================================================
+set :deploy_to, "."
+
+
+
+# =============================================================================
+# TASKS
+# =============================================================================
+# Define tasks that run on all (or only some) of the machines. You can specify
+# a role (or set of roles) that each task should be executed on. You can also
+# narrow the set of servers to a subset of a role by specifying options, which
+# must match the options given for the servers to select (like :primary => true)
+
+desc "This will deploy the app"
+task :deploy do
+  run "svn export #{repository} #{deploy_to} --force"
+end
+
+desc "Updates the database on the remote server"
+task :migrate do
+  run "script/syncdb"
+end
\ No newline at end of file
diff --git a/wax/WXApplication.php b/wax/WXApplication.php
index 7b1d048e99045411e9a69516be64066603461798..15c6cea1fbd76b7967457f9e0164ae4ca7dbce7f 100755
--- a/wax/WXApplication.php
+++ b/wax/WXApplication.php
@@ -47,6 +47,8 @@ class WXApplication {
 		} elseif($addr) {
 		  WXConfiguration::set_environment('production');
 		}
+		
+		/*  Looks for an environment specific file inside app/config */
 		if(is_readable(CONFIG_DIR.ENV.".php")) require_once(CONFIG_DIR.ENV.".php");
   }
   
@@ -70,6 +72,7 @@ class WXApplication {
       if(!$db['host']) $db['host']="localhost";
       if(!$db['port']) $db['port']="3306";
       
+    /****** Deprecated support for WXActiveRecord only around for one more version *****/
       if(isset($db['socket']) && strlen($db['socket'])>2) {
   			$dsn="{$db['dbtype']}:unix_socket={$db['socket']};dbname={$db['database']}"; 
   		} else {
@@ -80,7 +83,9 @@ class WXApplication {
   		$pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
   		if(! WXActiveRecord::setDefaultPDO($pdo) ) {
       	throw new WXException("Cannot Initialise DB", "Database Configuration Error");
-      }
+      }  
+    /**********************************************************/
+      
       WaxModel::load_adapter($db);
     }
   }
@@ -93,9 +98,7 @@ class WXApplication {
    */
 	private function delegate_request() {
 	  Session::start();
-		$route=new WXRoute( );
-		$delegate = $route->pick_controller();
-		$delegate_controller = new $delegate;
+		$delegate_controller = new slashcamelize(WaxUrl::get("controller"), true);
 		$delegate_controller->execute_request();
   }
 
diff --git a/wax/tests/TestWXRoute.php b/wax/tests/TestWXRoute.php
deleted file mode 100644
index 0c887c25e74b67fb97858aa1c20a7388bbe11bf6..0000000000000000000000000000000000000000
--- a/wax/tests/TestWXRoute.php
+++ /dev/null
@@ -1,38 +0,0 @@
-<?php
-
-class TestWXRoute extends WXTestCase {
-  
-  
-  
-  public function setUp() {
-    $_GET['route']="admin/test/case";
-    $this->config_array = array("default"=>"page", "login"=>"admin/login");
-  }
-  
-  public function tearDown() {}
-
-    
-	public function test_map_routes() {
-
-	}
-	
-	
-	public function test_pick_controller() {
-
-	}
-
-	private function test_check_controller() {
-
-	}
-
-	public function test_read_actions() {	
-
-	}
-	
-	public function controller_to_url() {
-
-	}
-  
-  
-}
-?>
\ No newline at end of file
-- 
1.5.4


