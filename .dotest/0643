From c2578d2b0a11a78913d6d4485f6a388d4b9995f3 Mon Sep 17 00:00:00 2001
From: charles <charles@oneblackbear.com>
Date: Wed, 30 Apr 2008 11:33:17 +0100
Subject: valid unique fixes

---
 wax/db/fields/CharField.php     |   17 ++++++++---------
 wax/tests/TestWaxModelField.php |   25 +++++++++++++++++++++----
 2 files changed, 29 insertions(+), 13 deletions(-)

diff --git a/wax/db/fields/CharField.php b/wax/db/fields/CharField.php
index 6382da742bd8f9276d9ac416c4223cc1a7c6f4b1..098242f3807ff029b7155f8fcdac4d72d392e99b 100644
--- a/wax/db/fields/CharField.php
+++ b/wax/db/fields/CharField.php
@@ -20,15 +20,14 @@ class CharField extends WaxModelField {
  	  $this->valid_unique();
   }
 
-  protected function valid_unique() {
-    if($this->unique){
-      $model_name = get_class($this->model);
-      $model = new $model_name();
-      //checks if the id in the database is the same as the id of the current row (will also pass if there's no entry in the database)
-      if($res = $model->filter(array($this->field => $model->{$this->model->field}))->first()->id && $res->id != $this->model->id){
-        $this->add_error($this->field, sprintf($this->messages["unique"], $this->label));
-      }
-    }
+	protected function valid_unique() {
+		if($this->unique){
+			$current_value = $this->model->{$this->col_name};
+			$primary = $this->model->primary_key;
+			//find anything that matches this column value, make sure primay key is not this one
+			$present = $this->model->filter("`".$this->col_name."`='".$current_value."'")->filter("`".$primary."` <> '".$this->model->$primary."'")->all();			
+			if($present->count() > 0) $this->add_error($this->field, sprintf($this->messages["unique"], $this->label));	
+		}
   }
 
 }
\ No newline at end of file
diff --git a/wax/tests/TestWaxModelField.php b/wax/tests/TestWaxModelField.php
index 00e9ce4a1baf876523be61bf7025beda2f663fef..e55701c498d730d151b8f36fb752b99316f67ff9 100644
--- a/wax/tests/TestWaxModelField.php
+++ b/wax/tests/TestWaxModelField.php
@@ -5,6 +5,13 @@ class ExampleFile extends WaxModel {
     $this->define("filename", "FileField", array("maxlength"=>255));
   }
 }
+class ExampleUnique extends WaxModel {
+  public function setup() {
+    $this->define("username", "CharField", array("maxlength"=>40, "unique" => true));
+    $this->define("password", "CharField", array("blank"=>false, "maxlength"=>15));
+    $this->define("email", "CharField", array("maxlength"=>255));
+  }
+}
 class ExampleFileField extends WaxModel {
   
   public function setup() {
@@ -69,10 +76,20 @@ class TestWaxModelField extends WXTestCase {
     }
     
     public function test_validate_unique() {
-      $this->model->define("username", "CharField", array("unique" => true));
-      $model1 = $this->model->create($this->get_fixture("user1"));
-      $model2 = $this->model->set_attributes($this->get_fixture("user1"));
-      $this->assertFalse($model2->validate());
+			$model1 = new ExampleUnique();
+			$model1->syncdb();
+			$model1->delete();
+			//check that duplicates are found and not saved
+      $model1->set_attributes($this->get_fixture("user1"));
+			$model1 = $model1->save();
+			$this->assertFalse(count($model1->errors));
+			$model2 = new ExampleUnique();
+      $model2->set_attributes($this->get_fixture("user1"));
+			$model2 = $model2->save();
+			$this->assertFalse(count($model2->errors));
+			//check that you can change the unique value of a model
+      $model1->set_attributes($this->get_fixture("user2"));
+			$model1 = $model1->save();
     }
     
     public function test_foreign_key() {
-- 
1.5.4


