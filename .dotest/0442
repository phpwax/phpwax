From c6bbe1ff36f3e9c309b0b183194b2f4e3a2163b2 Mon Sep 17 00:00:00 2001
From: Ross Riley <ross@oneblackbear.com>
Date: Wed, 16 Apr 2008 00:54:14 +0100
Subject: Work on widget output

---
 wax/db/WaxModelField.php        |    1 +
 wax/forms/WaxForm.php           |   55 +++++++++++++++++++++++++++++++++++++++
 wax/forms/WaxWidget.php         |   52 ++++++++++++++++++++++++++++++++++++
 wax/forms/widgets/TextInput.php |   50 +++++++++++++++++++++++++++++++++++
 4 files changed, 158 insertions(+), 0 deletions(-)
 create mode 100644 wax/forms/WaxForm.php
 create mode 100644 wax/forms/WaxWidget.php
 create mode 100644 wax/forms/widgets/TextInput.php

diff --git a/wax/db/WaxModelField.php b/wax/db/WaxModelField.php
index 404f49848f754c051a4244c84e42beea70963105..3bf928aca101f889021885dec7bbf9943790cbcc 100644
--- a/wax/db/WaxModelField.php
+++ b/wax/db/WaxModelField.php
@@ -18,6 +18,7 @@ class WaxModelField {
   public $maxlength = false;
   public $minlength = false;
   public $choices = false;
+  public $editable = true; // Only editable options will be displayed in forms
   public $blank = true;
   public $label = false;
   public $help_text = false;
diff --git a/wax/forms/WaxForm.php b/wax/forms/WaxForm.php
new file mode 100644
index 0000000000000000000000000000000000000000..9686ef6231a6a726d6050e26e44f23d0ae4b84b0
--- /dev/null
+++ b/wax/forms/WaxForm.php
@@ -0,0 +1,55 @@
+<?php
+
+/**
+ * WaxModelFields class
+ *
+ * @package PHP-Wax
+ **/
+class WaxForm {
+    
+  
+  //Validation & Format Options
+  public $name = "";
+  public $id = "";
+  public $action = "";
+  public $method="post";
+  public $encoding = "";
+  public $attributes = array();
+  
+  public $template = '<form %s>%s</form>';
+  
+  public $elements = array();
+  
+  
+
+  public function __construct(WaxModel $model = null) {
+    if($model) {
+      foreach($model->columns as $column=>$options) {
+        $el = $model->get_col($column);
+        $widget = new $el->widget($column, $model);
+        if($el->editable) $this->elements[$column] = $widget;
+      }
+    }
+  }
+  
+  public function render($el_divider = false) {
+    $output .="";
+    foreach($this->elements as $el) {
+      $output.= $el->render();
+      if($el_divider) $ouput.=$el_divider;
+    }
+    return sprintf($this->template, $this->make_attributes, $output);
+  }
+  
+  public function make_attributes() {
+     $res = "";
+     foreach($this->attributes as $name=>$value) {
+       $res.=sprintf('%s="%s" ', $name, $value);
+     }
+     return $res;
+   }
+
+  
+
+} // END class 
+
diff --git a/wax/forms/WaxWidget.php b/wax/forms/WaxWidget.php
new file mode 100644
index 0000000000000000000000000000000000000000..66d17872951b97ee8a75019fe46d855ec6efd808
--- /dev/null
+++ b/wax/forms/WaxWidget.php
@@ -0,0 +1,52 @@
+<?php
+
+
+/**
+ * Base Widget class
+ *
+ * @package PHP-Wax
+ **/
+class WaxWidget {
+
+  public $attributes = array();
+  public $value = false;
+  public $choices = false;
+  public $blank = true;
+  public $label = false;
+  public $help_text = false;
+  public $show_label = true;
+  public $label_template = '<label for="%s>%s</label>';
+  public $template = '<input %s />"';
+  
+  public function __construct($name, WaxModel $model=null) {
+    if($model) {
+      $this->attribute("name", "[$model->table]$name");
+      $this->attribute("id", "{$model->table}_{$name}");
+      $this->value = $model->$name;
+    }
+  }
+  
+  
+  public function render() {
+    $out ="";
+    if($this->show_label) $out .= sprintf($this->label_template, $this->attributes["id"], $this->label); 
+    $out .= sprintf($this->template, $this->make_attributes());
+    return $out;
+  }
+  
+  public function attribute($name, $value) {
+    $this->attributes[$name]=$value;
+  }
+  
+  public function make_attributes() {
+    $res = "";
+    foreach($this->attributes as $name=>$value) {
+      $res.=sprintf('%s="%s" ', $name, $value);
+    }
+    return $res;
+  }
+  
+
+
+
+} // END class 
\ No newline at end of file
diff --git a/wax/forms/widgets/TextInput.php b/wax/forms/widgets/TextInput.php
new file mode 100644
index 0000000000000000000000000000000000000000..27b39c57f7572188960ca5cfc959439e9fb9efb1
--- /dev/null
+++ b/wax/forms/widgets/TextInput.php
@@ -0,0 +1,50 @@
+<?php
+
+
+/**
+ * Text Input Widget class
+ *
+ * @package PHP-Wax
+ **/
+class TextInput extends WaxWidget {
+
+  public $attributes = array(
+    "type"=>"text"
+  
+  );
+  public $value = false;
+  public $choices = false;
+  public $blank = true;
+  public $label = false;
+  public $help_text = false;
+  public $show_label = true;
+  public $label_template = '<label for="%s>%s</label>';
+  public $template = '<input %s />"';
+  
+  public function __construct($name, WaxModel $model=null) {
+    
+  }
+  
+  public function render() {
+    $out ="";
+    if($this->show_label) $out .= sprintf($this->label_template, $this->attributes["id"], $this->label); 
+    $out .= sprintf($this->template, $this->make_attributes());
+    return $out;
+  }
+  
+  public function attribute($name, $value) {
+    $this->attributes[$name]=$value;
+  }
+  
+  public function make_attributes() {
+    $res = "";
+    foreach($this->attributes as $name=>$value) {
+      $res.=sprintf('%s="%s" ', $name, $value);
+    }
+    return $res;
+  }
+  
+
+
+
+} // END class
\ No newline at end of file
-- 
1.5.4


